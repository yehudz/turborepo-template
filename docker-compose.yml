version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: turborepo-postgres
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: dev_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Application
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: turborepo-web
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://app_user:dev_password@postgres:5432/app_db
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_placeholder
      - CLERK_SECRET_KEY=sk_test_placeholder
      - JWT_SECRET=your-jwt-secret-for-development-32-chars
      - NEXT_PUBLIC_APP_URL=http://localhost:3001
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
    ports:
      - "3001:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount source code for development (optional)
      - ./apps/web:/app/apps/web
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next

  # Documentation Application
  docs:
    build:
      context: .
      dockerfile: apps/docs/Dockerfile
    container_name: turborepo-docs
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for development (optional)
      - ./apps/docs:/app/apps/docs
      - /app/node_modules
      - /app/apps/docs/node_modules
      - /app/apps/docs/.next

  # Redis (optional - for caching/sessions)
  redis:
    image: redis:7-alpine
    container_name: turborepo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data: